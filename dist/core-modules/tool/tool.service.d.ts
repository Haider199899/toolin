import { AuthService } from '../../core-modules/auth/auth.service';
import { CreateToolDTO } from './dto/create-tool.dto';
import { ToolListResponseType } from './types/get-tools-response.type';
import { CategoryResponseType } from './types/get-categories-response.type';
import { PaginationDto } from 'src/shared/dtos/pagination-dto';
import { IPaginatedData } from 'src/shared/interfaces/paginated-data.interface';
export declare class ToolService {
    private readonly authService;
    private categoriesCollection;
    private toolsCollection;
    constructor(authService: AuthService);
    create(createToolDto: CreateToolDTO): Promise<{
        brand: string;
        model: string;
        name: string;
        images: string[];
        _geoloc: import("./dto/create-tool.dto").GeolocDTO;
        availableAfter?: number;
        availableBefore?: number;
        description?: string;
        hasInsurance: boolean;
        insuranceId?: string;
        isAvailable: boolean;
        isDeliveryAvailable: boolean;
        isOperatorAvailable: boolean;
        isOwnerApproved: boolean;
        isPublished: boolean;
        mainImageIdx?: number;
        marketValue?: string;
        priceDaily?: number;
        priceMonthly?: number;
        priceWeekly?: number;
        streetAddress?: string;
        category1?: string;
        category2?: string;
        category3?: string;
        id: string;
    }>;
    getTool(id: string): Promise<FirebaseFirestore.DocumentData>;
    getTools(paginationDto: PaginationDto): Promise<IPaginatedData<ToolListResponseType>>;
    getCategoriesList(): Promise<CategoryResponseType>;
    findTool(toolId: string): Promise<any>;
}
